{"version":3,"sources":["components/assets/images/icons/earning.svg","components/ui-component/cards/Skeleton/PolkadotCard.js","components/ui-component/cards/Skeleton/KusamaCard.js","components/Dashboard.js"],"names":["useStyles","makeStyles","theme","card","backgroundColor","palette","secondary","dark","color","overflow","position","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","marginTop","avatarRight","mediumAvatar","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","PolkadotCard","_ref","currentUser","wallet","accountId","classes","handleClick","event","_jsx","MainCard","border","className","contentClass","onClick","children","_jsxs","Grid","container","direction","alignItems","item","Typography","Button","variant","endIcon","SendIcon","signIn","requestSignIn","component","Link","to","withStyles","allAccounts","setAllAccounts","useState","error","setError","isLoading","setLoading","useEffect","extensionSetup","async","web3Enable","length","web3Accounts","spacing","gridSpacing","xs","lg","md","sm"],"mappings":"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","file":"static/js/5.b7086f46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earning.00f461a5.svg\";","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Grid, Menu, MenuItem, Typography,Button  } from '@material-ui/core';\r\nimport EarningIcon from '../../../assets/images/icons/earning.svg';\r\nimport MainCard from '../MainCard';\r\nimport { Link } from 'react-router-dom';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.secondary[800],\r\n        marginTop: '8px'\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.mediumAvatar,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        color: theme.palette.secondary[200],\r\n        zIndex: 1\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '14px',\r\n        marginBottom: '6px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.secondary[200]\r\n    },\r\n    avatarCircle: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.smallAvatar,\r\n        backgroundColor: theme.palette.secondary[200],\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    },\r\n    menuItem: {\r\n        marginRight: '14px',\r\n        fontSize: '1.25rem'\r\n    }\r\n}));\r\n\r\n// ===========================|| SKELETON EARNING CARD ||=========================== //\r\n\r\nconst PolkadotCard = ({ currentUser, wallet }) => {\r\n    const accountId = currentUser?.accountId;\r\n    const utilities = {\r\n        id: 'utilities',\r\n        title: 'Utilities',\r\n        type: 'group',\r\n        children: [\r\n            {\r\n                id: 'util-typography',\r\n                title: 'Typography',\r\n                type: 'item',\r\n                url: '/transaction/details',\r\n                // icon: icons.IconTypography,\r\n                breadcrumbs: false\r\n            }\r\n        ]\r\n    };\r\n    const classes = useStyles();\r\n    const handleClick = (event) => {\r\n    };\r\n    const signIn = () => {\r\n        wallet.requestSignIn(\"\", \"\");\r\n        }\r\n    return (\r\n        <MainCard border={false} className={classes.card} contentClass={classes.content} onClick={handleClick}>\r\n\r\n<Grid container direction=\"column\" alignItems=\"center\">\r\n                       \r\n                        {accountId ?  \r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                           \r\n                            <Grid item>\r\n                                    <Typography className={classes.cardHeading}>Welcome</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        <Grid item>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Typography className={classes.cardHeading}>Please Login First</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                        }\r\n                        {accountId ?  \r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                           \r\n                                <Grid item>\r\n                                    <Typography className={classes.cardHeading}>{accountId}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        <Grid item>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                            <Button variant=\"contained\" endIcon={<SendIcon />} onClick={signIn}>\r\n                            Login\r\n                            </Button>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                        }\r\n                                   {accountId &&  \r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                           \r\n                                <Grid item>\r\n                                <Button component={Link} to=\"/accounts\" variant=\"contained\" endIcon={<SendIcon />} onClick={(event) => handleClick(event)}>\r\n                            Get Start\r\n                            </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>  }\r\n                       \r\n                    </Grid>\r\n                    </MainCard>\r\n    )\r\n};\r\n\r\nexport default PolkadotCard;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Grid, Menu, MenuItem, Typography,Button  } from '@material-ui/core';\r\nimport EarningIcon from '../../../assets/images/icons/earning.svg';\r\nimport MainCard from '../MainCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.secondary[800],\r\n        marginTop: '8px'\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.mediumAvatar,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        color: theme.palette.secondary[200],\r\n        zIndex: 1\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '14px',\r\n        marginBottom: '6px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.secondary[200]\r\n    },\r\n    avatarCircle: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.smallAvatar,\r\n        backgroundColor: theme.palette.secondary[200],\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    },\r\n    menuItem: {\r\n        marginRight: '14px',\r\n        fontSize: '1.25rem'\r\n    }\r\n}));\r\n\r\n// ===========================|| SKELETON EARNING CARD ||=========================== //\r\n\r\nconst PolkadotCard = () => {\r\n    const utilities = {\r\n        id: 'utilities',\r\n        title: 'Utilities',\r\n        type: 'group',\r\n        children: [\r\n            {\r\n                id: 'util-typography',\r\n                title: 'Typography',\r\n                type: 'item',\r\n                url: '/transaction/details',\r\n                // icon: icons.IconTypography,\r\n                breadcrumbs: false\r\n            }\r\n        ]\r\n    };\r\n    const classes = useStyles();\r\n    const handleClick = (event) => {\r\n    };\r\n    return (\r\n        <MainCard border={false} className={classes.card} contentClass={classes.content} onClick={handleClick}>\r\n\r\n<Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Grid container justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Avatar component={Link} to=\"/transaction/details\" color=\"primary\" variant=\"rounded\" className={classes.avatar}>\r\n                                        <img src={EarningIcon} alt=\"Notification\" />\r\n                                    </Avatar>\r\n                                </Grid>\r\n                            \r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <Typography className={classes.cardHeading}>Kusama</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </MainCard>\r\n    );\r\n};\r\n\r\nexport default PolkadotCard;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState,useEffect  } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid,Skeleton } from '@material-ui/core';\r\nimport PolkadotCard from './ui-component/cards/Skeleton/PolkadotCard';\r\nimport KusamaCard from './ui-component/cards/Skeleton/KusamaCard';\r\nimport SearchSection from 'components/layout/MainLayout/Header/SearchSection';\r\nimport { gridSpacing } from './store/constant';\r\n\r\nimport {web3Accounts, web3Enable} from \"@polkadot/extension-dapp\";\r\n\r\n \r\nimport {\r\n  InputBase,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  cardHeading: {\r\n      marginRight: '8px',\r\n      marginTop: '18px',\r\n      marginBottom: '14px'\r\n  }\r\n});\r\n\r\nfunction Dashboard({ currentUser, wallet }) {\r\n  const classes = useStyles();\r\n  const [allAccounts, setAllAccounts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n      \r\n        setLoading(false);\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n      extensionSetup()\r\n  }, []);\r\n  const extensionSetup = async () => {\r\n    const allInjected = await web3Enable('Wallet-connect-tutorial');\r\n    if (allInjected.length === 0) {\r\n        setError('No extension installed!');\r\n        return;\r\n    }\r\n  \r\n//     // returns an array of { address, meta: { name, source } }\r\n//     // meta.source contains the name of the extension that provides this account\r\n    const allAccounts = await web3Accounts();\r\n    \r\n//     // the address we use to use for signing, as injected\r\n//   //   const SENDER = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFabHE';\r\n    \r\n//     // finds an injector for an address\r\n//   //   const injector = await web3FromAddress(SENDER);\r\n    \r\n//   //   // sign and send our transaction - notice here that the address of the account\r\n//   //   // (as retrieved injected) is passed through as the param to the `signAndSend`,\r\n//   //   // the API then calls the extension to present to the user and get it signed.\r\n//   //   // Once complete, the api sends the tx + signature via the normal process\r\n//   //   api.tx.balances\r\n//   //     .signAndSend(SENDER, { signer: injector.signer }, (status) => { ... });\r\n  setAllAccounts(allAccounts);\r\n};\r\n\r\n   // returns an array of all the injected sources\r\n  // (this needs to be called first, before other requests)\r\n  \r\n\r\n  return (\r\n  \r\n\r\n    <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={gridSpacing}>\r\n              <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                  <PolkadotCard currentUser={currentUser} wallet={wallet}/>\r\n              </Grid>\r\n              {/* <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                  <KusamaCard />\r\n              </Grid> */}\r\n              {/* <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                  <PolkadotCard isLoading={isLoading} />\r\n              </Grid>\r\n              <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                  <PolkadotCard isLoading={isLoading} />\r\n              </Grid> */}\r\n          </Grid>\r\n    </Grid>\r\n\r\n</Grid>\r\n      \r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(useStyles)(Dashboard);"],"sourceRoot":""}